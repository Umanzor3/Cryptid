package com.revature.cryptid.controller;

import java.util.List;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.revature.cryptid.model.Cryptids;
import com.revature.cryptid.service.CryptidService;

@RestController
@CrossOrigin
@RequestMapping("/user")
public class UserController {
	
	private UserService cryptidService;
	
	@Autowired
	public void setCryptidService(CryptidService cryptidService) {
		this.userService = userService;
	}
	
	@GetMapping("/all")
	public ResponseEntity<List<Cryptids>> getAllCryptids() {
		return new ResponseEntity<>(userService.findAllUsers(), HttpStatus.OK);
		
	}
	
	@GetMapping("/cryptids/{requestId}")
	public ResponseEntity<Cryptids> getCryptidById(@PathVariable String requestId) {
		int id = Integer.parseInt(requestId);
		return new ResponseEntity<>(userService.getUserById(id), HttpStatus. OK);
	}
	
	@PostMapping(value = "/delete")
	public void deleteCryptidById(@RequestBody String cryptid) {
		JSONObject js = new JSONObject(cryptid);
		int id = js.getInt("id");
		userService.deleteCryptidById(id);
	}
	
	@PostMapping(value = "/create")
	public ResponseEntity<Cryptids> createCryptid(@RequestBody String cryptidString){
		JSONObject json = new JSONObject(cryptidString);
		User user = new User();
		if (json != null) {
			
		}
	}

}
